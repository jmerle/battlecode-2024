package camel_case;

import battlecode.common.Direction;
import battlecode.common.GameActionException;
import battlecode.common.MapLocation;

// Generated by scripts/generate_bfs.py
// Based on Malott Fat Cats's 2021 pathfinding
// Malott Fat Cats's 2021 postmortem: https://battlecode.org/assets/files/postmortem-2021-malott-fat-cats.pdf
public class BFSNavigator extends Globals {
    public static Direction getBestDirection(MapLocation target, FastSet visited) throws GameActionException {
        MapLocation myLocation = rc.getLocation();
        int myX = myLocation.x;
        int myY = myLocation.y;
        int xOffset = mapWidth - myX;
        int yOffset = mapHeight - myY;

        MapLocation location1 = rc.adjacentLocation(Direction.WEST);
        int distance1 = 1_000_000;
        Direction direction1 = null;
        MapLocation location2 = rc.adjacentLocation(Direction.EAST);
        int distance2 = 1_000_000;
        Direction direction2 = null;
        MapLocation location3 = rc.adjacentLocation(Direction.SOUTH);
        int distance3 = 1_000_000;
        Direction direction3 = null;
        MapLocation location4 = rc.adjacentLocation(Direction.NORTH);
        int distance4 = 1_000_000;
        Direction direction4 = null;
        MapLocation location5 = rc.adjacentLocation(Direction.SOUTHWEST);
        int distance5 = 1_000_000;
        Direction direction5 = null;
        MapLocation location6 = rc.adjacentLocation(Direction.NORTHWEST);
        int distance6 = 1_000_000;
        Direction direction6 = null;
        MapLocation location7 = rc.adjacentLocation(Direction.SOUTHEAST);
        int distance7 = 1_000_000;
        Direction direction7 = null;
        MapLocation location8 = rc.adjacentLocation(Direction.NORTHEAST);
        int distance8 = 1_000_000;
        Direction direction8 = null;
        MapLocation location9 = location1.add(Direction.WEST);
        int distance9 = 1_000_000;
        Direction direction9 = null;
        MapLocation location12 = location2.add(Direction.EAST);
        int distance12 = 1_000_000;
        Direction direction12 = null;
        MapLocation location15 = location3.add(Direction.SOUTH);
        int distance15 = 1_000_000;
        Direction direction15 = null;
        MapLocation location18 = location4.add(Direction.NORTH);
        int distance18 = 1_000_000;
        Direction direction18 = null;
        MapLocation location10 = location1.add(Direction.SOUTHWEST);
        int distance10 = 1_000_000;
        Direction direction10 = null;
        MapLocation location11 = location1.add(Direction.NORTHWEST);
        int distance11 = 1_000_000;
        Direction direction11 = null;
        MapLocation location13 = location2.add(Direction.SOUTHEAST);
        int distance13 = 1_000_000;
        Direction direction13 = null;
        MapLocation location14 = location2.add(Direction.NORTHEAST);
        int distance14 = 1_000_000;
        Direction direction14 = null;
        MapLocation location16 = location3.add(Direction.SOUTHWEST);
        int distance16 = 1_000_000;
        Direction direction16 = null;
        MapLocation location17 = location3.add(Direction.SOUTHEAST);
        int distance17 = 1_000_000;
        Direction direction17 = null;
        MapLocation location19 = location4.add(Direction.NORTHWEST);
        int distance19 = 1_000_000;
        Direction direction19 = null;
        MapLocation location20 = location4.add(Direction.NORTHEAST);
        int distance20 = 1_000_000;
        Direction direction20 = null;
        MapLocation location21 = location5.add(Direction.SOUTHWEST);
        int distance21 = 1_000_000;
        Direction direction21 = null;
        MapLocation location22 = location6.add(Direction.NORTHWEST);
        int distance22 = 1_000_000;
        Direction direction22 = null;
        MapLocation location23 = location7.add(Direction.SOUTHEAST);
        int distance23 = 1_000_000;
        Direction direction23 = null;
        MapLocation location24 = location8.add(Direction.NORTHEAST);
        int distance24 = 1_000_000;
        Direction direction24 = null;
        MapLocation location25 = location9.add(Direction.WEST);
        int distance25 = 1_000_000;
        Direction direction25 = null;
        MapLocation location30 = location12.add(Direction.EAST);
        int distance30 = 1_000_000;
        Direction direction30 = null;
        MapLocation location35 = location15.add(Direction.SOUTH);
        int distance35 = 1_000_000;
        Direction direction35 = null;
        MapLocation location40 = location18.add(Direction.NORTH);
        int distance40 = 1_000_000;
        Direction direction40 = null;
        MapLocation location26 = location9.add(Direction.SOUTHWEST);
        int distance26 = 1_000_000;
        Direction direction26 = null;
        MapLocation location27 = location9.add(Direction.NORTHWEST);
        int distance27 = 1_000_000;
        Direction direction27 = null;
        MapLocation location31 = location12.add(Direction.SOUTHEAST);
        int distance31 = 1_000_000;
        Direction direction31 = null;
        MapLocation location32 = location12.add(Direction.NORTHEAST);
        int distance32 = 1_000_000;
        Direction direction32 = null;
        MapLocation location36 = location15.add(Direction.SOUTHWEST);
        int distance36 = 1_000_000;
        Direction direction36 = null;
        MapLocation location37 = location15.add(Direction.SOUTHEAST);
        int distance37 = 1_000_000;
        Direction direction37 = null;
        MapLocation location41 = location18.add(Direction.NORTHWEST);
        int distance41 = 1_000_000;
        Direction direction41 = null;
        MapLocation location42 = location18.add(Direction.NORTHEAST);
        int distance42 = 1_000_000;
        Direction direction42 = null;
        MapLocation location28 = location10.add(Direction.SOUTHWEST);
        int distance28 = 1_000_000;
        Direction direction28 = null;
        MapLocation location29 = location11.add(Direction.NORTHWEST);
        int distance29 = 1_000_000;
        Direction direction29 = null;
        MapLocation location33 = location13.add(Direction.SOUTHEAST);
        int distance33 = 1_000_000;
        Direction direction33 = null;
        MapLocation location34 = location14.add(Direction.NORTHEAST);
        int distance34 = 1_000_000;
        Direction direction34 = null;
        MapLocation location38 = location16.add(Direction.SOUTHWEST);
        int distance38 = 1_000_000;
        Direction direction38 = null;
        MapLocation location39 = location17.add(Direction.SOUTHEAST);
        int distance39 = 1_000_000;
        Direction direction39 = null;
        MapLocation location43 = location19.add(Direction.NORTHWEST);
        int distance43 = 1_000_000;
        Direction direction43 = null;
        MapLocation location44 = location20.add(Direction.NORTHEAST);
        int distance44 = 1_000_000;
        Direction direction44 = null;
        MapLocation location49 = location25.add(Direction.WEST);
        int distance49 = 1_000_000;
        Direction direction49 = null;
        MapLocation location54 = location30.add(Direction.EAST);
        int distance54 = 1_000_000;
        Direction direction54 = null;
        MapLocation location59 = location35.add(Direction.SOUTH);
        int distance59 = 1_000_000;
        Direction direction59 = null;
        MapLocation location64 = location40.add(Direction.NORTH);
        int distance64 = 1_000_000;
        Direction direction64 = null;
        MapLocation location50 = location25.add(Direction.SOUTHWEST);
        int distance50 = 1_000_000;
        Direction direction50 = null;
        MapLocation location51 = location25.add(Direction.NORTHWEST);
        int distance51 = 1_000_000;
        Direction direction51 = null;
        MapLocation location55 = location30.add(Direction.SOUTHEAST);
        int distance55 = 1_000_000;
        Direction direction55 = null;
        MapLocation location56 = location30.add(Direction.NORTHEAST);
        int distance56 = 1_000_000;
        Direction direction56 = null;
        MapLocation location60 = location35.add(Direction.SOUTHWEST);
        int distance60 = 1_000_000;
        Direction direction60 = null;
        MapLocation location61 = location35.add(Direction.SOUTHEAST);
        int distance61 = 1_000_000;
        Direction direction61 = null;
        MapLocation location65 = location40.add(Direction.NORTHWEST);
        int distance65 = 1_000_000;
        Direction direction65 = null;
        MapLocation location66 = location40.add(Direction.NORTHEAST);
        int distance66 = 1_000_000;
        Direction direction66 = null;
        MapLocation location45 = location21.add(Direction.SOUTHWEST);
        int distance45 = 1_000_000;
        Direction direction45 = null;
        MapLocation location46 = location22.add(Direction.NORTHWEST);
        int distance46 = 1_000_000;
        Direction direction46 = null;
        MapLocation location47 = location23.add(Direction.SOUTHEAST);
        int distance47 = 1_000_000;
        Direction direction47 = null;
        MapLocation location48 = location24.add(Direction.NORTHEAST);
        int distance48 = 1_000_000;
        Direction direction48 = null;
        MapLocation location52 = location26.add(Direction.SOUTHWEST);
        int distance52 = 1_000_000;
        Direction direction52 = null;
        MapLocation location53 = location27.add(Direction.NORTHWEST);
        int distance53 = 1_000_000;
        Direction direction53 = null;
        MapLocation location57 = location31.add(Direction.SOUTHEAST);
        int distance57 = 1_000_000;
        Direction direction57 = null;
        MapLocation location58 = location32.add(Direction.NORTHEAST);
        int distance58 = 1_000_000;
        Direction direction58 = null;
        MapLocation location62 = location36.add(Direction.SOUTHWEST);
        int distance62 = 1_000_000;
        Direction direction62 = null;
        MapLocation location63 = location37.add(Direction.SOUTHEAST);
        int distance63 = 1_000_000;
        Direction direction63 = null;
        MapLocation location67 = location41.add(Direction.NORTHWEST);
        int distance67 = 1_000_000;
        Direction direction67 = null;
        MapLocation location68 = location42.add(Direction.NORTHEAST);
        int distance68 = 1_000_000;
        Direction direction68 = null;

        if ((rc.canMove(Direction.WEST) || rc.canFill(location1)) && !visited.contains(location1)) {
            distance1 = rc.canFill(location1) && rc.isMovementReady() ? 2 : 1;
            direction1 = Direction.WEST;
        }
        if ((rc.canMove(Direction.EAST) || rc.canFill(location2)) && !visited.contains(location2)) {
            distance2 = rc.canFill(location2) && rc.isMovementReady() ? 2 : 1;
            direction2 = Direction.EAST;
        }
        if ((rc.canMove(Direction.SOUTH) || rc.canFill(location3)) && !visited.contains(location3)) {
            distance3 = rc.canFill(location3) && rc.isMovementReady() ? 2 : 1;
            direction3 = Direction.SOUTH;
        }
        if ((rc.canMove(Direction.NORTH) || rc.canFill(location4)) && !visited.contains(location4)) {
            distance4 = rc.canFill(location4) && rc.isMovementReady() ? 2 : 1;
            direction4 = Direction.NORTH;
        }
        if ((rc.canMove(Direction.SOUTHWEST) || rc.canFill(location5)) && !visited.contains(location5)) {
            distance5 = rc.canFill(location5) && rc.isMovementReady() ? 2 : 1;
            direction5 = Direction.SOUTHWEST;
        }
        if ((rc.canMove(Direction.NORTHWEST) || rc.canFill(location6)) && !visited.contains(location6)) {
            distance6 = rc.canFill(location6) && rc.isMovementReady() ? 2 : 1;
            direction6 = Direction.NORTHWEST;
        }
        if ((rc.canMove(Direction.SOUTHEAST) || rc.canFill(location7)) && !visited.contains(location7)) {
            distance7 = rc.canFill(location7) && rc.isMovementReady() ? 2 : 1;
            direction7 = Direction.SOUTHEAST;
        }
        if ((rc.canMove(Direction.NORTHEAST) || rc.canFill(location8)) && !visited.contains(location8)) {
            distance8 = rc.canFill(location8) && rc.isMovementReady() ? 2 : 1;
            direction8 = Direction.NORTHEAST;
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                if (rc.sensePassability(location9) || (!rc.hasFlag() && rc.senseMapInfo(location9).isWater())) {
                    if (distance1 + 1 < distance9) {
                        distance9 = distance1 + 1;
                        direction9 = direction1;
                    }
                    if (distance5 + 1 < distance9) {
                        distance9 = distance5 + 1;
                        direction9 = direction5;
                    }
                    if (distance6 + 1 < distance9) {
                        distance9 = distance6 + 1;
                        direction9 = direction6;
                    }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                if (rc.sensePassability(location12) || (!rc.hasFlag() && rc.senseMapInfo(location12).isWater())) {
                    if (distance2 + 1 < distance12) {
                        distance12 = distance2 + 1;
                        direction12 = direction2;
                    }
                    if (distance7 + 1 < distance12) {
                        distance12 = distance7 + 1;
                        direction12 = direction7;
                    }
                    if (distance8 + 1 < distance12) {
                        distance12 = distance8 + 1;
                        direction12 = direction8;
                    }
                }
        }
        switch (myY) {
            case 0:
            case 1:
                break;
            default:
                if (rc.sensePassability(location15) || (!rc.hasFlag() && rc.senseMapInfo(location15).isWater())) {
                    if (distance3 + 1 < distance15) {
                        distance15 = distance3 + 1;
                        direction15 = direction3;
                    }
                    if (distance5 + 1 < distance15) {
                        distance15 = distance5 + 1;
                        direction15 = direction5;
                    }
                    if (distance7 + 1 < distance15) {
                        distance15 = distance7 + 1;
                        direction15 = direction7;
                    }
                }
        }
        switch (yOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                if (rc.sensePassability(location18) || (!rc.hasFlag() && rc.senseMapInfo(location18).isWater())) {
                    if (distance4 + 1 < distance18) {
                        distance18 = distance4 + 1;
                        direction18 = direction4;
                    }
                    if (distance6 + 1 < distance18) {
                        distance18 = distance6 + 1;
                        direction18 = direction6;
                    }
                    if (distance8 + 1 < distance18) {
                        distance18 = distance8 + 1;
                        direction18 = direction8;
                    }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        if (rc.sensePassability(location10) || (!rc.hasFlag() && rc.senseMapInfo(location10).isWater())) {
                            if (distance5 + 1 < distance10) {
                                distance10 = distance5 + 1;
                                direction10 = direction5;
                            }
                            if (distance9 + 1 < distance10) {
                                distance10 = distance9 + 1;
                                direction10 = direction9;
                            }
                            if (distance1 + 1 < distance10) {
                                distance10 = distance1 + 1;
                                direction10 = direction1;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location11) || (!rc.hasFlag() && rc.senseMapInfo(location11).isWater())) {
                            if (distance6 + 1 < distance11) {
                                distance11 = distance6 + 1;
                                direction11 = direction6;
                            }
                            if (distance9 + 1 < distance11) {
                                distance11 = distance9 + 1;
                                direction11 = direction9;
                            }
                            if (distance1 + 1 < distance11) {
                                distance11 = distance1 + 1;
                                direction11 = direction1;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        if (rc.sensePassability(location13) || (!rc.hasFlag() && rc.senseMapInfo(location13).isWater())) {
                            if (distance7 + 1 < distance13) {
                                distance13 = distance7 + 1;
                                direction13 = direction7;
                            }
                            if (distance12 + 1 < distance13) {
                                distance13 = distance12 + 1;
                                direction13 = direction12;
                            }
                            if (distance2 + 1 < distance13) {
                                distance13 = distance2 + 1;
                                direction13 = direction2;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location14) || (!rc.hasFlag() && rc.senseMapInfo(location14).isWater())) {
                            if (distance8 + 1 < distance14) {
                                distance14 = distance8 + 1;
                                direction14 = direction8;
                            }
                            if (distance12 + 1 < distance14) {
                                distance14 = distance12 + 1;
                                direction14 = direction12;
                            }
                            if (distance2 + 1 < distance14) {
                                distance14 = distance2 + 1;
                                direction14 = direction2;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location16) || (!rc.hasFlag() && rc.senseMapInfo(location16).isWater())) {
                            if (distance15 + 1 < distance16) {
                                distance16 = distance15 + 1;
                                direction16 = direction15;
                            }
                            if (distance5 + 1 < distance16) {
                                distance16 = distance5 + 1;
                                direction16 = direction5;
                            }
                            if (distance3 + 1 < distance16) {
                                distance16 = distance3 + 1;
                                direction16 = direction3;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location17) || (!rc.hasFlag() && rc.senseMapInfo(location17).isWater())) {
                            if (distance15 + 1 < distance17) {
                                distance17 = distance15 + 1;
                                direction17 = direction15;
                            }
                            if (distance7 + 1 < distance17) {
                                distance17 = distance7 + 1;
                                direction17 = direction7;
                            }
                            if (distance3 + 1 < distance17) {
                                distance17 = distance3 + 1;
                                direction17 = direction3;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location19) || (!rc.hasFlag() && rc.senseMapInfo(location19).isWater())) {
                            if (distance18 + 1 < distance19) {
                                distance19 = distance18 + 1;
                                direction19 = direction18;
                            }
                            if (distance6 + 1 < distance19) {
                                distance19 = distance6 + 1;
                                direction19 = direction6;
                            }
                            if (distance4 + 1 < distance19) {
                                distance19 = distance4 + 1;
                                direction19 = direction4;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location20) || (!rc.hasFlag() && rc.senseMapInfo(location20).isWater())) {
                            if (distance18 + 1 < distance20) {
                                distance20 = distance18 + 1;
                                direction20 = direction18;
                            }
                            if (distance8 + 1 < distance20) {
                                distance20 = distance8 + 1;
                                direction20 = direction8;
                            }
                            if (distance4 + 1 < distance20) {
                                distance20 = distance4 + 1;
                                direction20 = direction4;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location21) || (!rc.hasFlag() && rc.senseMapInfo(location21).isWater())) {
                            if (distance16 + 1 < distance21) {
                                distance21 = distance16 + 1;
                                direction21 = direction16;
                            }
                            if (distance10 + 1 < distance21) {
                                distance21 = distance10 + 1;
                                direction21 = direction10;
                            }
                            if (distance5 + 1 < distance21) {
                                distance21 = distance5 + 1;
                                direction21 = direction5;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location22) || (!rc.hasFlag() && rc.senseMapInfo(location22).isWater())) {
                            if (distance19 + 1 < distance22) {
                                distance22 = distance19 + 1;
                                direction22 = direction19;
                            }
                            if (distance11 + 1 < distance22) {
                                distance22 = distance11 + 1;
                                direction22 = direction11;
                            }
                            if (distance6 + 1 < distance22) {
                                distance22 = distance6 + 1;
                                direction22 = direction6;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location23) || (!rc.hasFlag() && rc.senseMapInfo(location23).isWater())) {
                            if (distance17 + 1 < distance23) {
                                distance23 = distance17 + 1;
                                direction23 = direction17;
                            }
                            if (distance13 + 1 < distance23) {
                                distance23 = distance13 + 1;
                                direction23 = direction13;
                            }
                            if (distance7 + 1 < distance23) {
                                distance23 = distance7 + 1;
                                direction23 = direction7;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location24) || (!rc.hasFlag() && rc.senseMapInfo(location24).isWater())) {
                            if (distance20 + 1 < distance24) {
                                distance24 = distance20 + 1;
                                direction24 = direction20;
                            }
                            if (distance14 + 1 < distance24) {
                                distance24 = distance14 + 1;
                                direction24 = direction14;
                            }
                            if (distance8 + 1 < distance24) {
                                distance24 = distance8 + 1;
                                direction24 = direction8;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                if (rc.sensePassability(location25) || (!rc.hasFlag() && rc.senseMapInfo(location25).isWater())) {
                    if (distance9 + 1 < distance25) {
                        distance25 = distance9 + 1;
                        direction25 = direction9;
                    }
                    if (distance10 + 1 < distance25) {
                        distance25 = distance10 + 1;
                        direction25 = direction10;
                    }
                    if (distance11 + 1 < distance25) {
                        distance25 = distance11 + 1;
                        direction25 = direction11;
                    }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                if (rc.sensePassability(location30) || (!rc.hasFlag() && rc.senseMapInfo(location30).isWater())) {
                    if (distance12 + 1 < distance30) {
                        distance30 = distance12 + 1;
                        direction30 = direction12;
                    }
                    if (distance13 + 1 < distance30) {
                        distance30 = distance13 + 1;
                        direction30 = direction13;
                    }
                    if (distance14 + 1 < distance30) {
                        distance30 = distance14 + 1;
                        direction30 = direction14;
                    }
                }
        }
        switch (myY) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                if (rc.sensePassability(location35) || (!rc.hasFlag() && rc.senseMapInfo(location35).isWater())) {
                    if (distance15 + 1 < distance35) {
                        distance35 = distance15 + 1;
                        direction35 = direction15;
                    }
                    if (distance16 + 1 < distance35) {
                        distance35 = distance16 + 1;
                        direction35 = direction16;
                    }
                    if (distance17 + 1 < distance35) {
                        distance35 = distance17 + 1;
                        direction35 = direction17;
                    }
                }
        }
        switch (yOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                if (rc.sensePassability(location40) || (!rc.hasFlag() && rc.senseMapInfo(location40).isWater())) {
                    if (distance18 + 1 < distance40) {
                        distance40 = distance18 + 1;
                        direction40 = direction18;
                    }
                    if (distance19 + 1 < distance40) {
                        distance40 = distance19 + 1;
                        direction40 = direction19;
                    }
                    if (distance20 + 1 < distance40) {
                        distance40 = distance20 + 1;
                        direction40 = direction20;
                    }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        if (rc.sensePassability(location26) || (!rc.hasFlag() && rc.senseMapInfo(location26).isWater())) {
                            if (distance10 + 1 < distance26) {
                                distance26 = distance10 + 1;
                                direction26 = direction10;
                            }
                            if (distance25 + 1 < distance26) {
                                distance26 = distance25 + 1;
                                direction26 = direction25;
                            }
                            if (distance21 + 1 < distance26) {
                                distance26 = distance21 + 1;
                                direction26 = direction21;
                            }
                            if (distance9 + 1 < distance26) {
                                distance26 = distance9 + 1;
                                direction26 = direction9;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location27) || (!rc.hasFlag() && rc.senseMapInfo(location27).isWater())) {
                            if (distance11 + 1 < distance27) {
                                distance27 = distance11 + 1;
                                direction27 = direction11;
                            }
                            if (distance25 + 1 < distance27) {
                                distance27 = distance25 + 1;
                                direction27 = direction25;
                            }
                            if (distance9 + 1 < distance27) {
                                distance27 = distance9 + 1;
                                direction27 = direction9;
                            }
                            if (distance22 + 1 < distance27) {
                                distance27 = distance22 + 1;
                                direction27 = direction22;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        if (rc.sensePassability(location31) || (!rc.hasFlag() && rc.senseMapInfo(location31).isWater())) {
                            if (distance13 + 1 < distance31) {
                                distance31 = distance13 + 1;
                                direction31 = direction13;
                            }
                            if (distance30 + 1 < distance31) {
                                distance31 = distance30 + 1;
                                direction31 = direction30;
                            }
                            if (distance23 + 1 < distance31) {
                                distance31 = distance23 + 1;
                                direction31 = direction23;
                            }
                            if (distance12 + 1 < distance31) {
                                distance31 = distance12 + 1;
                                direction31 = direction12;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location32) || (!rc.hasFlag() && rc.senseMapInfo(location32).isWater())) {
                            if (distance14 + 1 < distance32) {
                                distance32 = distance14 + 1;
                                direction32 = direction14;
                            }
                            if (distance30 + 1 < distance32) {
                                distance32 = distance30 + 1;
                                direction32 = direction30;
                            }
                            if (distance12 + 1 < distance32) {
                                distance32 = distance12 + 1;
                                direction32 = direction12;
                            }
                            if (distance24 + 1 < distance32) {
                                distance32 = distance24 + 1;
                                direction32 = direction24;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location36) || (!rc.hasFlag() && rc.senseMapInfo(location36).isWater())) {
                            if (distance35 + 1 < distance36) {
                                distance36 = distance35 + 1;
                                direction36 = direction35;
                            }
                            if (distance16 + 1 < distance36) {
                                distance36 = distance16 + 1;
                                direction36 = direction16;
                            }
                            if (distance21 + 1 < distance36) {
                                distance36 = distance21 + 1;
                                direction36 = direction21;
                            }
                            if (distance15 + 1 < distance36) {
                                distance36 = distance15 + 1;
                                direction36 = direction15;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location37) || (!rc.hasFlag() && rc.senseMapInfo(location37).isWater())) {
                            if (distance35 + 1 < distance37) {
                                distance37 = distance35 + 1;
                                direction37 = direction35;
                            }
                            if (distance17 + 1 < distance37) {
                                distance37 = distance17 + 1;
                                direction37 = direction17;
                            }
                            if (distance15 + 1 < distance37) {
                                distance37 = distance15 + 1;
                                direction37 = direction15;
                            }
                            if (distance23 + 1 < distance37) {
                                distance37 = distance23 + 1;
                                direction37 = direction23;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        if (rc.sensePassability(location41) || (!rc.hasFlag() && rc.senseMapInfo(location41).isWater())) {
                            if (distance40 + 1 < distance41) {
                                distance41 = distance40 + 1;
                                direction41 = direction40;
                            }
                            if (distance19 + 1 < distance41) {
                                distance41 = distance19 + 1;
                                direction41 = direction19;
                            }
                            if (distance22 + 1 < distance41) {
                                distance41 = distance22 + 1;
                                direction41 = direction22;
                            }
                            if (distance18 + 1 < distance41) {
                                distance41 = distance18 + 1;
                                direction41 = direction18;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        if (rc.sensePassability(location42) || (!rc.hasFlag() && rc.senseMapInfo(location42).isWater())) {
                            if (distance40 + 1 < distance42) {
                                distance42 = distance40 + 1;
                                direction42 = direction40;
                            }
                            if (distance20 + 1 < distance42) {
                                distance42 = distance20 + 1;
                                direction42 = direction20;
                            }
                            if (distance18 + 1 < distance42) {
                                distance42 = distance18 + 1;
                                direction42 = direction18;
                            }
                            if (distance24 + 1 < distance42) {
                                distance42 = distance24 + 1;
                                direction42 = direction24;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location28) || (!rc.hasFlag() && rc.senseMapInfo(location28).isWater())) {
                            if (distance21 + 1 < distance28) {
                                distance28 = distance21 + 1;
                                direction28 = direction21;
                            }
                            if (distance26 + 1 < distance28) {
                                distance28 = distance26 + 1;
                                direction28 = direction26;
                            }
                            if (distance10 + 1 < distance28) {
                                distance28 = distance10 + 1;
                                direction28 = direction10;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location29) || (!rc.hasFlag() && rc.senseMapInfo(location29).isWater())) {
                            if (distance22 + 1 < distance29) {
                                distance29 = distance22 + 1;
                                direction29 = direction22;
                            }
                            if (distance27 + 1 < distance29) {
                                distance29 = distance27 + 1;
                                direction29 = direction27;
                            }
                            if (distance11 + 1 < distance29) {
                                distance29 = distance11 + 1;
                                direction29 = direction11;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location33) || (!rc.hasFlag() && rc.senseMapInfo(location33).isWater())) {
                            if (distance23 + 1 < distance33) {
                                distance33 = distance23 + 1;
                                direction33 = direction23;
                            }
                            if (distance31 + 1 < distance33) {
                                distance33 = distance31 + 1;
                                direction33 = direction31;
                            }
                            if (distance13 + 1 < distance33) {
                                distance33 = distance13 + 1;
                                direction33 = direction13;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location34) || (!rc.hasFlag() && rc.senseMapInfo(location34).isWater())) {
                            if (distance24 + 1 < distance34) {
                                distance34 = distance24 + 1;
                                direction34 = direction24;
                            }
                            if (distance32 + 1 < distance34) {
                                distance34 = distance32 + 1;
                                direction34 = direction32;
                            }
                            if (distance14 + 1 < distance34) {
                                distance34 = distance14 + 1;
                                direction34 = direction14;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location38) || (!rc.hasFlag() && rc.senseMapInfo(location38).isWater())) {
                            if (distance36 + 1 < distance38) {
                                distance38 = distance36 + 1;
                                direction38 = direction36;
                            }
                            if (distance21 + 1 < distance38) {
                                distance38 = distance21 + 1;
                                direction38 = direction21;
                            }
                            if (distance16 + 1 < distance38) {
                                distance38 = distance16 + 1;
                                direction38 = direction16;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location39) || (!rc.hasFlag() && rc.senseMapInfo(location39).isWater())) {
                            if (distance37 + 1 < distance39) {
                                distance39 = distance37 + 1;
                                direction39 = direction37;
                            }
                            if (distance23 + 1 < distance39) {
                                distance39 = distance23 + 1;
                                direction39 = direction23;
                            }
                            if (distance17 + 1 < distance39) {
                                distance39 = distance17 + 1;
                                direction39 = direction17;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        if (rc.sensePassability(location43) || (!rc.hasFlag() && rc.senseMapInfo(location43).isWater())) {
                            if (distance41 + 1 < distance43) {
                                distance43 = distance41 + 1;
                                direction43 = direction41;
                            }
                            if (distance22 + 1 < distance43) {
                                distance43 = distance22 + 1;
                                direction43 = direction22;
                            }
                            if (distance19 + 1 < distance43) {
                                distance43 = distance19 + 1;
                                direction43 = direction19;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        if (rc.sensePassability(location44) || (!rc.hasFlag() && rc.senseMapInfo(location44).isWater())) {
                            if (distance42 + 1 < distance44) {
                                distance44 = distance42 + 1;
                                direction44 = direction42;
                            }
                            if (distance24 + 1 < distance44) {
                                distance44 = distance24 + 1;
                                direction44 = direction24;
                            }
                            if (distance20 + 1 < distance44) {
                                distance44 = distance20 + 1;
                                direction44 = direction20;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                if (rc.sensePassability(location49) || (!rc.hasFlag() && rc.senseMapInfo(location49).isWater())) {
                    if (distance25 + 1 < distance49) {
                        distance49 = distance25 + 1;
                        direction49 = direction25;
                    }
                    if (distance26 + 1 < distance49) {
                        distance49 = distance26 + 1;
                        direction49 = direction26;
                    }
                    if (distance27 + 1 < distance49) {
                        distance49 = distance27 + 1;
                        direction49 = direction27;
                    }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                if (rc.sensePassability(location54) || (!rc.hasFlag() && rc.senseMapInfo(location54).isWater())) {
                    if (distance30 + 1 < distance54) {
                        distance54 = distance30 + 1;
                        direction54 = direction30;
                    }
                    if (distance31 + 1 < distance54) {
                        distance54 = distance31 + 1;
                        direction54 = direction31;
                    }
                    if (distance32 + 1 < distance54) {
                        distance54 = distance32 + 1;
                        direction54 = direction32;
                    }
                }
        }
        switch (myY) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                if (rc.sensePassability(location59) || (!rc.hasFlag() && rc.senseMapInfo(location59).isWater())) {
                    if (distance35 + 1 < distance59) {
                        distance59 = distance35 + 1;
                        direction59 = direction35;
                    }
                    if (distance36 + 1 < distance59) {
                        distance59 = distance36 + 1;
                        direction59 = direction36;
                    }
                    if (distance37 + 1 < distance59) {
                        distance59 = distance37 + 1;
                        direction59 = direction37;
                    }
                }
        }
        switch (yOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                if (rc.sensePassability(location64) || (!rc.hasFlag() && rc.senseMapInfo(location64).isWater())) {
                    if (distance40 + 1 < distance64) {
                        distance64 = distance40 + 1;
                        direction64 = direction40;
                    }
                    if (distance41 + 1 < distance64) {
                        distance64 = distance41 + 1;
                        direction64 = direction41;
                    }
                    if (distance42 + 1 < distance64) {
                        distance64 = distance42 + 1;
                        direction64 = direction42;
                    }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        if (rc.sensePassability(location50) || (!rc.hasFlag() && rc.senseMapInfo(location50).isWater())) {
                            if (distance26 + 1 < distance50) {
                                distance50 = distance26 + 1;
                                direction50 = direction26;
                            }
                            if (distance49 + 1 < distance50) {
                                distance50 = distance49 + 1;
                                direction50 = direction49;
                            }
                            if (distance28 + 1 < distance50) {
                                distance50 = distance28 + 1;
                                direction50 = direction28;
                            }
                            if (distance25 + 1 < distance50) {
                                distance50 = distance25 + 1;
                                direction50 = direction25;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location51) || (!rc.hasFlag() && rc.senseMapInfo(location51).isWater())) {
                            if (distance27 + 1 < distance51) {
                                distance51 = distance27 + 1;
                                direction51 = direction27;
                            }
                            if (distance49 + 1 < distance51) {
                                distance51 = distance49 + 1;
                                direction51 = direction49;
                            }
                            if (distance25 + 1 < distance51) {
                                distance51 = distance25 + 1;
                                direction51 = direction25;
                            }
                            if (distance29 + 1 < distance51) {
                                distance51 = distance29 + 1;
                                direction51 = direction29;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (myY) {
                    case 0:
                        break;
                    default:
                        if (rc.sensePassability(location55) || (!rc.hasFlag() && rc.senseMapInfo(location55).isWater())) {
                            if (distance31 + 1 < distance55) {
                                distance55 = distance31 + 1;
                                direction55 = direction31;
                            }
                            if (distance54 + 1 < distance55) {
                                distance55 = distance54 + 1;
                                direction55 = direction54;
                            }
                            if (distance33 + 1 < distance55) {
                                distance55 = distance33 + 1;
                                direction55 = direction33;
                            }
                            if (distance30 + 1 < distance55) {
                                distance55 = distance30 + 1;
                                direction55 = direction30;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location56) || (!rc.hasFlag() && rc.senseMapInfo(location56).isWater())) {
                            if (distance32 + 1 < distance56) {
                                distance56 = distance32 + 1;
                                direction56 = direction32;
                            }
                            if (distance54 + 1 < distance56) {
                                distance56 = distance54 + 1;
                                direction56 = direction54;
                            }
                            if (distance30 + 1 < distance56) {
                                distance56 = distance30 + 1;
                                direction56 = direction30;
                            }
                            if (distance34 + 1 < distance56) {
                                distance56 = distance34 + 1;
                                direction56 = direction34;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        if (rc.sensePassability(location60) || (!rc.hasFlag() && rc.senseMapInfo(location60).isWater())) {
                            if (distance59 + 1 < distance60) {
                                distance60 = distance59 + 1;
                                direction60 = direction59;
                            }
                            if (distance36 + 1 < distance60) {
                                distance60 = distance36 + 1;
                                direction60 = direction36;
                            }
                            if (distance38 + 1 < distance60) {
                                distance60 = distance38 + 1;
                                direction60 = direction38;
                            }
                            if (distance35 + 1 < distance60) {
                                distance60 = distance35 + 1;
                                direction60 = direction35;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        if (rc.sensePassability(location61) || (!rc.hasFlag() && rc.senseMapInfo(location61).isWater())) {
                            if (distance59 + 1 < distance61) {
                                distance61 = distance59 + 1;
                                direction61 = direction59;
                            }
                            if (distance37 + 1 < distance61) {
                                distance61 = distance37 + 1;
                                direction61 = direction37;
                            }
                            if (distance35 + 1 < distance61) {
                                distance61 = distance35 + 1;
                                direction61 = direction35;
                            }
                            if (distance39 + 1 < distance61) {
                                distance61 = distance39 + 1;
                                direction61 = direction39;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        if (rc.sensePassability(location65) || (!rc.hasFlag() && rc.senseMapInfo(location65).isWater())) {
                            if (distance64 + 1 < distance65) {
                                distance65 = distance64 + 1;
                                direction65 = direction64;
                            }
                            if (distance41 + 1 < distance65) {
                                distance65 = distance41 + 1;
                                direction65 = direction41;
                            }
                            if (distance43 + 1 < distance65) {
                                distance65 = distance43 + 1;
                                direction65 = direction43;
                            }
                            if (distance40 + 1 < distance65) {
                                distance65 = distance40 + 1;
                                direction65 = direction40;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        if (rc.sensePassability(location66) || (!rc.hasFlag() && rc.senseMapInfo(location66).isWater())) {
                            if (distance64 + 1 < distance66) {
                                distance66 = distance64 + 1;
                                direction66 = direction64;
                            }
                            if (distance42 + 1 < distance66) {
                                distance66 = distance42 + 1;
                                direction66 = direction42;
                            }
                            if (distance40 + 1 < distance66) {
                                distance66 = distance40 + 1;
                                direction66 = direction40;
                            }
                            if (distance44 + 1 < distance66) {
                                distance66 = distance44 + 1;
                                direction66 = direction44;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location45) || (!rc.hasFlag() && rc.senseMapInfo(location45).isWater())) {
                            if (distance38 + 1 < distance45) {
                                distance45 = distance38 + 1;
                                direction45 = direction38;
                            }
                            if (distance28 + 1 < distance45) {
                                distance45 = distance28 + 1;
                                direction45 = direction28;
                            }
                            if (distance21 + 1 < distance45) {
                                distance45 = distance21 + 1;
                                direction45 = direction21;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        if (rc.sensePassability(location46) || (!rc.hasFlag() && rc.senseMapInfo(location46).isWater())) {
                            if (distance43 + 1 < distance46) {
                                distance46 = distance43 + 1;
                                direction46 = direction43;
                            }
                            if (distance29 + 1 < distance46) {
                                distance46 = distance29 + 1;
                                direction46 = direction29;
                            }
                            if (distance22 + 1 < distance46) {
                                distance46 = distance22 + 1;
                                direction46 = direction22;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location47) || (!rc.hasFlag() && rc.senseMapInfo(location47).isWater())) {
                            if (distance39 + 1 < distance47) {
                                distance47 = distance39 + 1;
                                direction47 = direction39;
                            }
                            if (distance33 + 1 < distance47) {
                                distance47 = distance33 + 1;
                                direction47 = direction33;
                            }
                            if (distance23 + 1 < distance47) {
                                distance47 = distance23 + 1;
                                direction47 = direction23;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        if (rc.sensePassability(location48) || (!rc.hasFlag() && rc.senseMapInfo(location48).isWater())) {
                            if (distance44 + 1 < distance48) {
                                distance48 = distance44 + 1;
                                direction48 = direction44;
                            }
                            if (distance34 + 1 < distance48) {
                                distance48 = distance34 + 1;
                                direction48 = direction34;
                            }
                            if (distance24 + 1 < distance48) {
                                distance48 = distance24 + 1;
                                direction48 = direction24;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location52) || (!rc.hasFlag() && rc.senseMapInfo(location52).isWater())) {
                            if (distance28 + 1 < distance52) {
                                distance52 = distance28 + 1;
                                direction52 = direction28;
                            }
                            if (distance50 + 1 < distance52) {
                                distance52 = distance50 + 1;
                                direction52 = direction50;
                            }
                            if (distance45 + 1 < distance52) {
                                distance52 = distance45 + 1;
                                direction52 = direction45;
                            }
                            if (distance26 + 1 < distance52) {
                                distance52 = distance26 + 1;
                                direction52 = direction26;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location53) || (!rc.hasFlag() && rc.senseMapInfo(location53).isWater())) {
                            if (distance29 + 1 < distance53) {
                                distance53 = distance29 + 1;
                                direction53 = direction29;
                            }
                            if (distance51 + 1 < distance53) {
                                distance53 = distance51 + 1;
                                direction53 = direction51;
                            }
                            if (distance27 + 1 < distance53) {
                                distance53 = distance27 + 1;
                                direction53 = direction27;
                            }
                            if (distance46 + 1 < distance53) {
                                distance53 = distance46 + 1;
                                direction53 = direction46;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                        break;
                    default:
                        if (rc.sensePassability(location57) || (!rc.hasFlag() && rc.senseMapInfo(location57).isWater())) {
                            if (distance33 + 1 < distance57) {
                                distance57 = distance33 + 1;
                                direction57 = direction33;
                            }
                            if (distance55 + 1 < distance57) {
                                distance57 = distance55 + 1;
                                direction57 = direction55;
                            }
                            if (distance47 + 1 < distance57) {
                                distance57 = distance47 + 1;
                                direction57 = direction47;
                            }
                            if (distance31 + 1 < distance57) {
                                distance57 = distance31 + 1;
                                direction57 = direction31;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    default:
                        if (rc.sensePassability(location58) || (!rc.hasFlag() && rc.senseMapInfo(location58).isWater())) {
                            if (distance34 + 1 < distance58) {
                                distance58 = distance34 + 1;
                                direction58 = direction34;
                            }
                            if (distance56 + 1 < distance58) {
                                distance58 = distance56 + 1;
                                direction58 = direction56;
                            }
                            if (distance32 + 1 < distance58) {
                                distance58 = distance32 + 1;
                                direction58 = direction32;
                            }
                            if (distance48 + 1 < distance58) {
                                distance58 = distance48 + 1;
                                direction58 = direction48;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        if (rc.sensePassability(location62) || (!rc.hasFlag() && rc.senseMapInfo(location62).isWater())) {
                            if (distance60 + 1 < distance62) {
                                distance62 = distance60 + 1;
                                direction62 = direction60;
                            }
                            if (distance38 + 1 < distance62) {
                                distance62 = distance38 + 1;
                                direction62 = direction38;
                            }
                            if (distance45 + 1 < distance62) {
                                distance62 = distance45 + 1;
                                direction62 = direction45;
                            }
                            if (distance36 + 1 < distance62) {
                                distance62 = distance36 + 1;
                                direction62 = direction36;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (myY) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    default:
                        if (rc.sensePassability(location63) || (!rc.hasFlag() && rc.senseMapInfo(location63).isWater())) {
                            if (distance61 + 1 < distance63) {
                                distance63 = distance61 + 1;
                                direction63 = direction61;
                            }
                            if (distance39 + 1 < distance63) {
                                distance63 = distance39 + 1;
                                direction63 = direction39;
                            }
                            if (distance37 + 1 < distance63) {
                                distance63 = distance37 + 1;
                                direction63 = direction37;
                            }
                            if (distance47 + 1 < distance63) {
                                distance63 = distance47 + 1;
                                direction63 = direction47;
                            }
                        }
                }
        }
        switch (myX) {
            case 0:
            case 1:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        if (rc.sensePassability(location67) || (!rc.hasFlag() && rc.senseMapInfo(location67).isWater())) {
                            if (distance65 + 1 < distance67) {
                                distance67 = distance65 + 1;
                                direction67 = direction65;
                            }
                            if (distance43 + 1 < distance67) {
                                distance67 = distance43 + 1;
                                direction67 = direction43;
                            }
                            if (distance46 + 1 < distance67) {
                                distance67 = distance46 + 1;
                                direction67 = direction46;
                            }
                            if (distance41 + 1 < distance67) {
                                distance67 = distance41 + 1;
                                direction67 = direction41;
                            }
                        }
                }
        }
        switch (xOffset) {
            case 0:
            case 1:
            case 2:
                break;
            default:
                switch (yOffset) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    default:
                        if (rc.sensePassability(location68) || (!rc.hasFlag() && rc.senseMapInfo(location68).isWater())) {
                            if (distance66 + 1 < distance68) {
                                distance68 = distance66 + 1;
                                direction68 = direction66;
                            }
                            if (distance44 + 1 < distance68) {
                                distance68 = distance44 + 1;
                                direction68 = direction44;
                            }
                            if (distance42 + 1 < distance68) {
                                distance68 = distance42 + 1;
                                direction68 = direction42;
                            }
                            if (distance48 + 1 < distance68) {
                                distance68 = distance48 + 1;
                                direction68 = direction48;
                            }
                        }
                }
        }

        switch (target.x - myX) {
            case -4:
                switch (target.y - myY) {
                    case -2:
                        return direction52;
                    case -1:
                        return direction50;
                    case 0:
                        return direction49;
                    case 1:
                        return direction51;
                    case 2:
                        return direction53;
                }
                break;
            case -3:
                switch (target.y - myY) {
                    case -3:
                        return direction45;
                    case -2:
                        return direction28;
                    case -1:
                        return direction26;
                    case 0:
                        return direction25;
                    case 1:
                        return direction27;
                    case 2:
                        return direction29;
                    case 3:
                        return direction46;
                }
                break;
            case -2:
                switch (target.y - myY) {
                    case -4:
                        return direction62;
                    case -3:
                        return direction38;
                    case -2:
                        return direction21;
                    case -1:
                        return direction10;
                    case 0:
                        return direction9;
                    case 1:
                        return direction11;
                    case 2:
                        return direction22;
                    case 3:
                        return direction43;
                    case 4:
                        return direction67;
                }
                break;
            case -1:
                switch (target.y - myY) {
                    case -4:
                        return direction60;
                    case -3:
                        return direction36;
                    case -2:
                        return direction16;
                    case -1:
                        return direction5;
                    case 0:
                        return direction1;
                    case 1:
                        return direction6;
                    case 2:
                        return direction19;
                    case 3:
                        return direction41;
                    case 4:
                        return direction65;
                }
                break;
            case 0:
                switch (target.y - myY) {
                    case -4:
                        return direction59;
                    case -3:
                        return direction35;
                    case -2:
                        return direction15;
                    case -1:
                        return direction3;
                    case 1:
                        return direction4;
                    case 2:
                        return direction18;
                    case 3:
                        return direction40;
                    case 4:
                        return direction64;
                }
                break;
            case 1:
                switch (target.y - myY) {
                    case -4:
                        return direction61;
                    case -3:
                        return direction37;
                    case -2:
                        return direction17;
                    case -1:
                        return direction7;
                    case 0:
                        return direction2;
                    case 1:
                        return direction8;
                    case 2:
                        return direction20;
                    case 3:
                        return direction42;
                    case 4:
                        return direction66;
                }
                break;
            case 2:
                switch (target.y - myY) {
                    case -4:
                        return direction63;
                    case -3:
                        return direction39;
                    case -2:
                        return direction23;
                    case -1:
                        return direction13;
                    case 0:
                        return direction12;
                    case 1:
                        return direction14;
                    case 2:
                        return direction24;
                    case 3:
                        return direction44;
                    case 4:
                        return direction68;
                }
                break;
            case 3:
                switch (target.y - myY) {
                    case -3:
                        return direction47;
                    case -2:
                        return direction33;
                    case -1:
                        return direction31;
                    case 0:
                        return direction30;
                    case 1:
                        return direction32;
                    case 2:
                        return direction34;
                    case 3:
                        return direction48;
                }
                break;
            case 4:
                switch (target.y - myY) {
                    case -2:
                        return direction57;
                    case -1:
                        return direction55;
                    case 0:
                        return direction54;
                    case 1:
                        return direction56;
                    case 2:
                        return direction58;
                }
                break;
        }

        int currentDistance = myLocation.distanceSquaredTo(target);

        int score28 = (currentDistance - location28.distanceSquaredTo(target)) / distance28;
        int score29 = (currentDistance - location29.distanceSquaredTo(target)) / distance29;
        int score33 = (currentDistance - location33.distanceSquaredTo(target)) / distance33;
        int score34 = (currentDistance - location34.distanceSquaredTo(target)) / distance34;
        int score38 = (currentDistance - location38.distanceSquaredTo(target)) / distance38;
        int score39 = (currentDistance - location39.distanceSquaredTo(target)) / distance39;
        int score43 = (currentDistance - location43.distanceSquaredTo(target)) / distance43;
        int score44 = (currentDistance - location44.distanceSquaredTo(target)) / distance44;
        int score49 = (currentDistance - location49.distanceSquaredTo(target)) / distance49;
        int score54 = (currentDistance - location54.distanceSquaredTo(target)) / distance54;
        int score59 = (currentDistance - location59.distanceSquaredTo(target)) / distance59;
        int score64 = (currentDistance - location64.distanceSquaredTo(target)) / distance64;
        int score50 = (currentDistance - location50.distanceSquaredTo(target)) / distance50;
        int score51 = (currentDistance - location51.distanceSquaredTo(target)) / distance51;
        int score55 = (currentDistance - location55.distanceSquaredTo(target)) / distance55;
        int score56 = (currentDistance - location56.distanceSquaredTo(target)) / distance56;
        int score60 = (currentDistance - location60.distanceSquaredTo(target)) / distance60;
        int score61 = (currentDistance - location61.distanceSquaredTo(target)) / distance61;
        int score65 = (currentDistance - location65.distanceSquaredTo(target)) / distance65;
        int score66 = (currentDistance - location66.distanceSquaredTo(target)) / distance66;
        int score45 = (currentDistance - location45.distanceSquaredTo(target)) / distance45;
        int score46 = (currentDistance - location46.distanceSquaredTo(target)) / distance46;
        int score47 = (currentDistance - location47.distanceSquaredTo(target)) / distance47;
        int score48 = (currentDistance - location48.distanceSquaredTo(target)) / distance48;
        int score52 = (currentDistance - location52.distanceSquaredTo(target)) / distance52;
        int score53 = (currentDistance - location53.distanceSquaredTo(target)) / distance53;
        int score57 = (currentDistance - location57.distanceSquaredTo(target)) / distance57;
        int score58 = (currentDistance - location58.distanceSquaredTo(target)) / distance58;
        int score62 = (currentDistance - location62.distanceSquaredTo(target)) / distance62;
        int score63 = (currentDistance - location63.distanceSquaredTo(target)) / distance63;
        int score67 = (currentDistance - location67.distanceSquaredTo(target)) / distance67;

        int maxScore = Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(score28, score29), score33), score34), score38), score39), score43), score44), score49), score54), score59), score64), score50), score51), score55), score56), score60), score61), score65), score66), score45), score46), score47), score48), score52), score53), score57), score58), score62), score63), score67), (currentDistance - location68.distanceSquaredTo(target)) / distance68);

        if (maxScore == score28) {
            return direction28;
        }
        if (maxScore == score29) {
            return direction29;
        }
        if (maxScore == score33) {
            return direction33;
        }
        if (maxScore == score34) {
            return direction34;
        }
        if (maxScore == score38) {
            return direction38;
        }
        if (maxScore == score39) {
            return direction39;
        }
        if (maxScore == score43) {
            return direction43;
        }
        if (maxScore == score44) {
            return direction44;
        }
        if (maxScore == score49) {
            return direction49;
        }
        if (maxScore == score54) {
            return direction54;
        }
        if (maxScore == score59) {
            return direction59;
        }
        if (maxScore == score64) {
            return direction64;
        }
        if (maxScore == score50) {
            return direction50;
        }
        if (maxScore == score51) {
            return direction51;
        }
        if (maxScore == score55) {
            return direction55;
        }
        if (maxScore == score56) {
            return direction56;
        }
        if (maxScore == score60) {
            return direction60;
        }
        if (maxScore == score61) {
            return direction61;
        }
        if (maxScore == score65) {
            return direction65;
        }
        if (maxScore == score66) {
            return direction66;
        }
        if (maxScore == score45) {
            return direction45;
        }
        if (maxScore == score46) {
            return direction46;
        }
        if (maxScore == score47) {
            return direction47;
        }
        if (maxScore == score48) {
            return direction48;
        }
        if (maxScore == score52) {
            return direction52;
        }
        if (maxScore == score53) {
            return direction53;
        }
        if (maxScore == score57) {
            return direction57;
        }
        if (maxScore == score58) {
            return direction58;
        }
        if (maxScore == score62) {
            return direction62;
        }
        if (maxScore == score63) {
            return direction63;
        }
        if (maxScore == score67) {
            return direction67;
        }

        return direction68;
    }
}
